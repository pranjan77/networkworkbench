var _			= require('underscore');
var restler		= require('restler');
var fs			= require('fs');
var 

SHOCK = function( url, user, password, file) {

	if ( typeof(file) == 'undefined' ) file = null;

	this.url = url;
	this.username = user;
	this.password = password;
	this.filename = file;
	this.attribFilename = __dirname + '/attrib' + _.random(123433);
	console.log(this.attribFilename);
	this.shockId = null;
	this.authToken = null;
	this.attributes = {};
};

SHOCK.prototype.sendFile = function( callback ) {
	if ( this.filename == null || 
		 this.url == null ||
		 this.url == undefined ) {

		callback('Error: Required is missing', null);
	}

	var fd = fs.openSync(this.attribFilename, 'w', 0666);
	fs.writeSync(fd, JSON.stringify(this.attributes) );
	fs.closeSync(fd);

	restler.post(this.url, {
		multipart: true,
		username: this.username,
		password: this.password,
		data: {
			'attributes': restler.file(this.attribFilename, null, fs.statSync(this.attribFilename).size),
			'upload': restler.file(this.filename, null, fs.statSync(this.filename).size)
		}
	}).on('complete', function(result, response) {
		if (result instanceof Error ) {
			callback(result, null);
		} else {
			callback(null, result);
		}
	});

}

SHOCK.prototype.getFile = function( id, callback ) {
	var url = this.url + '/' + id + '?download';
	this.shockId = id;

	restler.get(url, {
		username: this.username,
		password: this.password
	}).on('complete', function(result, response) {
		if (result instanceof Error ) {
			callback(result, null);
		} else {
			callback(null, result);
		}
	});

}

SHOCK.prototype.getAttributes = function( id, callback ) {
	var url = this.url + '/' + id;
	this.shockId = id;

	restler.get(url, {
		username: this.username,
		password: this.password
	}).on('complete', function(result, response) {
		if (result instanceof Error ) {
			callback(result, null);
		} else {
			callback(null, result);
		}
	});

}

SHOCK.prototype.setId = function( id, callback ) {
	this.shockId = id;
}

SHOCK.prototype.setFile = function( file, callback ) {
	this.filename = file;
}

SHOCK.prototype.query = function( key, value, callback ) {
	var url = this.url + '/?query&' + key + '=' + value;

	restler.get(url, {
		username: this.username,
		password: this.password
	}).on('complete', function(result, response) {
		if (result instanceof Error ) {
			callback(result, null);
		} else {
			callback(null, result);
		}
	});
}

SHOCK.prototype.addAttributesSync = function( key, value ) {
	//_.extend(this.attributes, {key:value});
	this.attributes['' + key] = value;
}

SHOCK.prototype.addAttributes = function( key, value, callback) {
	this.attributes['' + key] = value;
	callback();
}

module.exports = module.exports.SHOCK = SHOCK;


