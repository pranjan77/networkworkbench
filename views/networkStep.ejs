<!DOCTYPE html>
<html lang="en" class="fuelux">
<head>
    <meta charset="utf-8">
    <title>Network Workbench</title>
    <link rel="stylesheet" type="text/css" media="screen" charset="utf-8" 
        href="/css/colorbrewer.css">
    <link rel="stylesheet" type="text/css" media="screen" charset="utf-8" 
        href="/css/bootstrap.css">
    <link rel="stylesheet" type="text/css" media="screen" charset="utf-8" 
        href="/css/bootstrap-responsive.css">
    <link rel="stylesheet" type="text/css" charset="utf-8"
        href="/css/font-awesome.css">
    <link rel="stylesheet" type="text/css" media="screen" charset="utf-8"
        href="/css/identity.css">
    <link rel="stylesheet" type="text/css" media="screen" charset="utf-8"
        href="/css/kbase-common.css">
    <link rel="stylesheet" type="text/css" media="screen" charset="utf-8" 
        href="/css/kbase.css">
    <link rel="stylesheet" type="text/css" media="screen" charset="utf-8" 
        href="/css/font-awesome.css">
    <link rel="stylesheet" type="text/css" media="screen" charset="utf-8" 
        href="/css/fuelux.min.css">
    <style type="text/css" media="screen">
        #container { margin-top: 80px; }
    </style>
</head>
<body>
<div id="wrap">
    <div id="nav" class="navbar navbar-fixed-top">
        <div class="navbar-inner">
            <a href="#">
                <img class="logo" src="/img/kbase-logo-small.png" width="46px"/>
            </a>
            <a class="brand" href="#">Network Workbench</a>
            <ul class="nav" id="nav-content">
            </ul>
            <ul class="nav pull-right" id="nav-content-right">
                <li><a href="#" id="help-link"><i class="icon-question-sign"></i> Help</a></li>
                <li><a href="/">Datavis Library</a></li>
			    <li id = 'login'></li>
            </ul>
            <div id="progress-indicator" class="span2 pull-right"></div>
        </div>
    </div>
    <div id="container" class="container">
		<div id="blurb">
			<div class="" style="height: 100px;">
				<div class="media">
					<a class="pull-left" href="#">
			  			<img src="/img/network-icon.png" class="logo" style='height:80px;width:80px;'>
					</a>
					<div class="media-body">
						<h3 class="media-heading">The Network Workbench</h3>
						  <p>Explore KBase networks using dynamic visualizations. Navigate among sets of
						  genes and clusters over a variety of network data sets available for microbes,
						  plants, and metagenomic communities.</p>
					</div>
				</div>
			</div>

			<div  class='row'>

				<div class="well wizard-example">
				  <div id="MyWizard" class="wizard">
					<ul class="steps"a>
					  <li data-target="#step1" class="active"><span class="badge badge-info">1</span>Step 1<span class="chevron"></span></li>
					  <li data-target="#step2"><span class="badge">2</span>Step 2<span class="chevron"></span></li>
					  <li data-target="#step3"><span class="badge">3</span>Step 3<span class="chevron"></span></li>
					  <li data-target="#step4"><span class="badge">4</span>Step 4<span class="chevron"></span></li>
					  <li data-target="#step5"><span class="badge">5</span>Step 5<span class="chevron"></span></li>
					</ul>
					<div class="actions">
					  <button class="btn btn-mini btn-prev"> <i class="icon-arrow-left"></i>Prev</button>
					  <button class="btn btn-mini btn-next" data-last="Finish">Next<i class="icon-arrow-right"></i></button>
					</div>
				  </div>
				  <div class="step-content">
					  <div class="step-pane active" id="step1"> <!-- Start of Step 1 -->
						  <br/>
						  <h2>Network Co-expression Input</h2> 
						  <blockquote><small>Please upload input expression table, sample id information and gene functional annotation.</small></blockquote>
						  <hr>
						  <div class='pull-right'>
							  <a data-toggle="modal" href="#step1Help" class="btn btn-info"><i class='icon-question-sign' ></i></a>

							  <!-- Modal -->
							  <div id="step1Help" class="modal hide fade" tabindex="-1" role="dialog" aria-labelledby="myModalLabel" aria-hidden="true">
								  <div class="modal-header">
									  <button type="button" class="close" data-dismiss="modal" aria-hidden="true">&times;</button>
									  <h3 id="myModalLabel">Modal Heading</h3>
								  </div>
								  <div class="modal-body">
									  <h3>Step 1 Help</h3>
									  <h4>Filter and identify differentially expressed genes</h4>
									  <p>
									  	<pre>
      This function identifies genes that are highly differentially expressed across samples using ANOVA (http://www.maths.bath.ac.uk/~jjf23/book/) 
or Log-odd ratios (http://www.bioconductor.org/packages/2.12/bioc/html/limma.html).
Users can identify the highly differentially expressed across samples either setting up a p-value threshold.

      -m METHOD, --method=METHOD
            Method to identify highly differential expressed genes. Choices include anova and log-odd ratio (lor). [default "lor"]

      -p P_THRESHOLD, --p_threshold=P_THRESHOLD
            Maximum p-value up to which genes significantly highly differentially express [default 0.05]


      -u HUMAN, --human=HUMAN
            Accept human input regarding replicates? 'y' to allow, 'n' to automatically use defaults. [y/n]  (Default is 'n')

      -r HAS_REPLICATES, --has_replicates=HAS_REPLICATES
            Does your data have replicates (this helps avoid user input during program runtime)?  [y/n]  (Default is 'y')

      -d DEFAULT_ACTION, --default_action=DEFAULT_ACTION
            Use the default action when dealing with replicates?  [y/n]  (Default is 'y')
										</pre>
									  </p>
									  <br/>
									  <h4>Construct gene co-expression network (creates edges)</h4>
									  <p>
									  	<pre>
      For a data matrix that represents gene expressions across samples, this function constructs the gene co-expression network
using correlation matrix.

      -m METHOD, --method=METHOD
            Method to construct gene co-expression network. When method = "simple or "s, the function constructs gene co-expression network using Pearson correlation matrix whose elements less than corr_thld are set to be zero

      -c CORR_THLD, --corr_thld=CORR_THLD
            Maximum threshold to set elements of Pearson correlation matrix to be zero when method=simple. [default 0.75]

      -q P_THLD, --p_thld=P_THLD
            Maximum threshold for p from Pearson correlation when method=simple. [default NULL]

      -r MINRSQ, --minRsq=MINRSQ
            Minimum threshold for R2 that measures the fitness of gene co-expression network to scale-free topology in WGCNA. See pickSoftThreshold() of WGCNA for details. [default 0.8]

      -k MAXMEDIANK, --maxmediank=MAXMEDIANK
            Maximum median connections for genes in network. See pickSoftThreshold() of WGCNA for details. [default 40]

      -p MAXPOWER, --maxpower=MAXPOWER
            Maximum power to decide the soft threshold. See pickSoftThreshold() of WGCNA for details. [default 50]

      -t TYPE, --type=TYPE
            Type of output. When method = "edge or "e, the function outputs edge list of gene co-expression network consisting of gene pairs with Pearson correlation greater than corr_thld. When method = adjmat or "a, the function outputs the adjacency matrix of constructed gene co-expression network. [default "edge"]
										</pre>
									  </p>
									  <br/>
									  <h4>Clustering step (creates modules)</h4>
									  <p>
									  	<pre>
      Given the gene expression table, this function clusters genes into co-expression modules using hierarchical clustering.

      -n NET_METHOD, --net_method=NET_METHOD
            Method to construct gene co-expression network. When net_method = "simple or "s, the function constructs gene co-expression network using Pearson correlation matrix. When net_method = WGCNA or "W, the function constructs gene co-expression network using Pearson correlations between genes, and signed network by WGCNA. [default "simple"]

      -r MINRSQ, --minRsq=MINRSQ
            Minimum threshold for R2 that measures the fitness of gene co-expression network to scale-free topology in WGCNA. See pickSoftThreshold() of WGCNA for details. [default 0.8]

      -k MAXMEDIANK, --maxmediank=MAXMEDIANK
            Maximum median connections for genes in network. See pickSoftThreshold() of WGCNA for details. [default 40]

      -p MAXPOWER, --maxpower=MAXPOWER
            Maximum power to decide the soft threshold. See pickSoftThreshold() of WGCNA for details. [default 50]

      -c CLUST_METHOD, --clust_method=CLUST_METHOD
            Method to cluster genes into co-expression modules. When clust_method = "hclust or "h,the function uses hierarchical clustering. When clust_method = WGCNA or "W, the function uses WGCNA. [default "WGCNA"]

      -s MINMODULESIZE, --minModuleSize=MINMODULESIZE
            Minimum size of modules when method is WGCNA. [default 50]

      -d DETECTCUTHEIGHT, --detectCutHeight=DETECTCUTHEIGHT
            Maximum heights to join modules in clustering. [default 0.99]
										</pre>
									  </p>
									  <br/>
								  </div>
							  </div>
						  </div>

						  <div style='padding: 30px 0 20px 30px;'>
							  <form class="form-horizontal" >
								  <div class="control-group">
									  <label class="control-label" for="inputEmail">Email</label>
									  <div class="controls">
										  <input type="text" id="inputEmail" placeholder="Email">
										  <span type="file" id="inputEmailOk" style='color:#00f; display:none;'><i id='inputEmailOkIcon' class='icon-spinner icon-spin icon-large' > </i></span>
									  </div>
								  </div>
								  <div class="control-group">
									  <label class="control-label" for="expTable">Upload Expression Table</label>
									  <div class="controls">
										  <input type="file" id="expTable" placeholder="Expression Table">
										  <span type="file" id="expTableOk" style='color:#00f; display:none;'><i id='expTableOkIcon' class='icon-spinner icon-spin icon-large' > </i></span>
									  </div>
								  </div>
								  <div class="control-group">
									  <label class="control-label" for="sampleId">Sample Id Information</label>
									  <div class="controls">
										  <input type="file" id="sampleId" placeholder="Sample Id Info">
										  <span type="file" id="sampleIdOk" style='color:#00f; display:none;'><i id='sampleIdOkIcon' class='icon-spinner icon-spin icon-large' > </i></span>
									  </div>
								  </div>
								  <div class="control-group">
									  <label class="control-label" for="geneAnno">Gene Annotations</label>
									  <div class="controls">
										  <input type="file" id="geneAnno" placeholder="Gene Annotations">
										  <span type="file" id="geneAnnoOk" style='color:#00f; display:none;'><i id='geneAnnoOkIcon' class='icon-spinner icon-spin icon-large' > </i></span>
									  </div>
								  </div>
								  <div class="control-group">
									  <label class="control-label" for="filterParams">Filter Parameters</label>
									  <div class="controls">
										  <input type="text" class='input-xxlarge' id="filterParams" placeholder="" value='-m anova -p 0.05 -u n -r y -d y'>
										  <span type="file" id="filterParamsOk" style='color:#00f; '><i id='filterParamsOkIcon' class='icon-ok' > </i></span>
									  </div>
								  </div>
								  <div class="control-group">
									  <label class="control-label" for="clusterParams">Cluster Parameters</label>
									  <div class="controls">
										  <input type="text" class='input-xxlarge' id="clusterParams" placeholder="" value='-m simple -t edge -c 0.75 -r 0.8 -k 40 -p 50'>
										  <span type="file" id="clusterParamsOk" style='color:#00f; '><i id='clusterParamsOkIcon' class='icon-ok' > </i></span>
									  </div>
								  </div>
								  <div class="control-group">
									  <label class="control-label" for="moduleParams">Module Parameters</label>
									  <div class="controls">
										  <input type="text" class='input-xxlarge' id="moduleParams" placeholder="" value='-s 100 -c hclust -n simple -r 0.8 -k 40 -p 50 -d 0.99'>
										  <span type="file" id="moduleParamsOk" style='color:#00f; '><i id='moduleParamsOkIcon' class='icon-ok' > </i></span>
									  </div>
								  </div>
							  </form>
						  </div>
						  <hr>
					  </div> <!-- End of Step 1 -->



					  <div class="step-pane" id="step2"> <!-- Start of Step 2 -->
						  <br/>
						  <h2>Execute Co-expression Analysis</h2> 
						  <blockquote><small>We are using WGCNA approach to calculate co-expression networks. Please confirm your inputs and click Start Execution.</small></blockquote>
						  <hr>

						  <div style='padding: 30px 0 20px 30px;'>
							  <form class="form-horizontal" >
								  <div class="control-group">
									  <label class="control-label" for="inputEmail">Email</label>
									  <div class="controls">
										  <i class='icon-envelope-alt' ></i> <span id='step2Email'> </span>
									  </div>
								  </div>
								  <div class="control-group">
									  <label class="control-label" for="expTable">Upload Expression Table</label>
									  <div class="controls">
										  <i class='icon-file-alt' ></i> <span id='step2expTable'></span>
									  </div>
								  </div>
								  <div class="control-group">
									  <label class="control-label" for="sampleId">Sample Id Information</label>
									  <div class="controls">
										  <i class='icon-file-alt' ></i> <span id='step2sampleId'></span>
									  </div>
								  </div>
								  <div class="control-group">
									  <label class="control-label" for="geneAnno">Gene Annotations</label>
									  <div class="controls">
										  <i class='icon-file-alt' ></i> <span id='step2geneAnno'></span>
									  </div>
								  </div>
								  <div class="control-group">
									  <div class="controls">
										  <button type="button" id='submitJob' class="btn btn-info">Start Execution</button>
									  </div>
								  </div>
							  </form>
						  </div>
						  <hr>
					  
					  </div><!-- End of Step 2 -->

					  <div class="step-pane" id="step3"> <!-- Start of Step 3 -->
						  <br/>
						  <h2>Execution Status</h2> 
						  <blockquote><small>Please be patient, job has been submitted, the page will auto-refresh once done.</small></blockquote>
						  <hr>

						  <div style='padding: 30px 0 20px 30px;'>
							  <center>
								  <i id='bigsign' class="icon-spinner icon-spin icon-4x"></i> <br/><br/><br/><br/>
								  Current Status <b><span id='status' >submitted</span></b> &nbsp; &nbsp; Tasks Remaining <b><span id='remTasks' >0</span></b> <br/>
								  Job submitted <strong>successfully</strong>. The page will auto-refresh when ready.<br/>
								  Once done, you will be notified at <strong><i class='icon-envelope-alt' ></i> <span id='step3Email'></span>
</strong>.<br/>
							  </center>
						  </div>
						  <hr>
					  
					  </div><!-- End of Step 3 -->

					  <div class="step-pane" id="step4"> <!-- Start of Step 4 -->
						  <br/>
						  <h2>Execution Sucessful</h2> 
						  <blockquote><small>Now you are at the 4th step of this wizard example. Click 'Next' to finish up.</small></blockquote>
						  <hr>

						  <div style='padding: 30px 0 20px 30px;'>
							  <center>
								  <i class="icon-ok-sign icon-4x"></i> <br/><br/><br/><br/>
								  Job completed <strong>successfully</strong>. <br/>
								  Notification sent to <strong><i class='icon-envelope-alt' ></i><span id='step4Email'></span> </strong>.<br/>
										  <button type="button" id='visualize' class="btn btn-info">Show Network</button>
							  </center>
						  </div>
						  <hr>
					  
					  </div><!-- End of Step 4 -->

					  <div class="step-pane" id="step5"> <!-- Start of Step 5 -->
						  <br/>
						  <h2>Co-expression Visualization</h2> 
						  <blockquote><small>Visualize the network. Nodes and edges are displayed for individual clusters.</small></blockquote>
						  <hr>

						  <div style='padding: 30px 0 20px 30px;'>
							  <center>
								  The results file can be <a href='#' ><i class='icon-download-alt'></i> downloaded </a> <br/>
							  </center>
							  <div style='padding-top:30px;'>
								  <div class='pull-right' ><i id='expand' class='icon-external-link'></i>
								  </div>
								  <iframe id='vizFrame' src="#" height="1060" frameBorder="0" style='width:100%;'></iframe>
							  </div>
						  </div>
						  <hr>
					  
					  </div><!-- End of Step 5 -->
				  </div>
				  <br>
				  <input class="btn" id="btnWizardPrev" value="Back" type="button" style='display:none;'>
				  <input class="btn btn-primary" id="btnWizardNext" value="Next" type="button" style='display:none;'>

				</div>
				<!-- /well -->

				<hr>


			</div>

		  </div>

    </div>
</div>
<% include layout/footer %>
</body>
    <script src="/js/bootstrap.js"></script>
    <script src="/js/jquery.js"></script>
    <script src="/js/jquery.cookie.min.js"></script>
    <script src="/js/kbase-ui-min.js"></script>
    <script src="/js/loader.min.js"></script>
    <script src="/js/all.min.js"></script>
	<script type = 'text/javascript'>

		var cId = '';
		$(function() {
			var vizURL = 'http://140.221.85.97/gvisualize/';
			var loop = false;
			$('#login').kbaseLogin(
				{
					style : 'text',
				}
			);
			$('#MyWizard').on('change', function(e, data) {
				console.log('change');
				if(data.step===3 && data.direction==='next') {
				// return e.preventDefault();
				}
				});
			$('#MyWizard').on('changed', function(e, data) {
				console.log('changed');
				});
			$('#MyWizard').on('finished', function(e, data) {
				console.log('finished');
				});
			$('#btnWizardPrev').on('click', function() {
				$('#MyWizard').wizard('previous');
				});
			$('#btnWizardNext').on('click', function() {
					$('#MyWizard').wizard('next','foo');
					});
			$('#btnWizardStep').on('click', function() {
					var item = $('#MyWizard').wizard('selectedItem');
					console.log(item.step);
					});
			$('#MyWizard').on('stepclick', function(e, data) {
					console.log('step' + data.step + ' clicked');
					if(data.step===1) {
					// return e.preventDefault();
					}
			});
			$('#inputEmail').change(function() {
				$('#inputEmailOk').show();

				$.post("/updateEmail", { email: $('#inputEmail').val() })
				.done(function(data) {
					$('#inputEmailOkIcon').attr('class', 'icon-ok');
					$('#step2Email').text($('#inputEmail').val() );
					$('#step3Email').text($('#inputEmail').val() );
					$('#step4Email').text($('#inputEmail').val() );
				});
			});

			$('#filterParams').change(function() {
				$('#filterParamsOkIcon').attr('class', 'icon-spinner icon-spin icon-large');

				$.post("/updatefp", { fp: $('#filterParams').val() })
				.done(function(data) {
					$('#filterParamsOkIcon').attr('class', 'icon-ok');
				});
			});

			$('#clusterParams').change(function() {
				$('#clusterParamsOkIcon').attr('class', 'icon-spinner icon-spin icon-large');

				$.post("/updatecp", { cp: $('#clusterParams').val() })
				.done(function(data) {
					$('#clusterParamsOkIcon').attr('class', 'icon-ok');
				});
			});

			$('#moduleParams').change(function() {
				$('#moduleParamsOkIcon').attr('class', 'icon-spinner icon-spin icon-large');

				$.post("/updatemp", { mp: $('#moduleParams').val() })
				.done(function(data) {
					$('#moduleParamsOkIcon').attr('class', 'icon-ok');
				});
			});



			$('#submitJob').click(function() {
				$.post("/submitJob", null)
				.done(function(data) {
					$('#MyWizard').wizard('next','foo');
					loop = true;
					window.setInterval(checkStatus, 10000);
				});
				return false;
			});

			$('#visualize').click(function() {
				$('#MyWizard').wizard('next','foo');
			});

			function checkStatus() { 
				if (loop) {
					$.post("/checkStatus")
					.done(function(data, textStatus, xhr) {
						if ( xhr.status === 200 ) {
							var status = data.data.state;
							$('#status').text( status );
							$('#remTasks').text( data.data.remaintasks );
							if ( status === 'completed' ) {
								loop = false;
								var vizShockFile = data.data.tasks[3].outputs.merged_list_json.node;
								cId = vizShockFile;
								$('#vizFrame').attr('src', vizURL +  vizShockFile);
								$('#MyWizard').wizard('next','foo');
							} else if ( status === 'submitted' ) {

							} else {
								// Error occured
								loop = false;
								$('#bigsign').attr('class','icon-warning icon-4x');
							}
						} else {
							loop = false;
							$('#bigsign').attr('class','icon-warning icon-4x');

						}
					});
				}
			};

			$('#expTable,#sampleId,#geneAnno').live('change', function() {

				var id = $(this).attr('id');
				$('#' + id + 'Ok').show();


				var data1 = new FormData();
				jQuery.each($('#' + id )[0].files, function(i, file) {
					data1.append('file', file);
				});
				data1.append('type', id );
			
				$.ajax({  
				type: "POST", 
				cache: false,
				contentType: false,
				processData: false,
				url: "/uploadFileAction",  
				data: data1,  
				success: function( data )  {  
					$('#' + id + 'OkIcon').attr('class', 'icon-ok');
					$('#step2' + id ).text($('#' + id ).val().split('\\').pop());
					}
				});  
			});

			$('#expand').click(function() {

				window.open(vizURL + cId, 'Network Workbench', 'window settings');
				return false;
					
			});

	
		});

	</script>
</html>
